@model IEnumerable<Vidly.Models.Movie>

@{
    ViewBag.Title = "Movies";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Movies</h2>
<div>
    @Html.ActionLink("Add Movie", "New", "Movies", new {@class = "btn btn-info"})
</div>
<br />
<table id="moviestable"class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Movie</th>
        <th>Genre</th>
        <th>Delete</th>
    </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts
{
    <script>
        $(document)
            .ready(function() {
                //The below function applies DataTables plugin to the movies table.
                var table = $("#moviestable")
                    .DataTable({
                        ajax: {
                            url: "/api/moviesapi",
                            dataSrc: "" //Blank because this url itself already has the movie data.

                        },
                        columns: [
                            {
//FIRST COLUMN HERE (Movie Column). This code gets the data field from the JSON itself. To access JSON props, just do name.prop e.g. genre.name
                                data: "name",
                                render: function(data, type, movie) { //data points to the above "name" field here
                                    return "<a href='/movies/edit/" + movie.id + "'>" + movie.name + "</a>"
                                }
                            },
                            { //SECOND COLUMN HERE (Genre column)
                                data: "genre.name"
                            },
                            { //THIRD COLUMN HERE (
                                data: "id",
//this "data" part defines the definition of the variable used below as part of the URL to be, in this case, "id".
                                //The data is then passed as an argument to this function and invoked in the URL.
                                render: function(data) {
                                    return "<button class='btn-link js-delete' data-movie-id=" +
                                        data +
                                        ">Delete</button>"
                                }
                            }
                        ]
                    });

                //When the delete button is clicked, remove the row and delete from the database (via REST/HTTP DELETE API request)
                $("#moviestable")
                    .on("click",
                        ".js-delete",
                        function() {
                            var button = $(this);
//this refers to the element selected by #customers .js-delete (the button)/Allows you to use the button below
                            bootbox.confirm("Are you sure you want to delete this movie?",
                                function(result) {
                                    if (result) {
                                        $.ajax({
                                            url: "/api/moviesapi/" + button.attr("data-movie-id"),
                                            method: "DELETE",
                                            success: function() {
                                                table.row(button
                                                        .parents("tr"))
                                                    .remove()
                                                    .draw();
//Removes the specified tr (table row) that the button belongs to from the page, DataTable model, and redraws the DataTable to reflect this.
                                            }
                                        });
                                    }

                                });


                        });
            });

    </script>
}